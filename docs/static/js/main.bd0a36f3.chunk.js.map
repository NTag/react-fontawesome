{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["icons","iconName","icon","kebabCase","replace","App","state","key","numberOfColors","Math","ceil","random","colors","randomColor","count","hue","Object","toConsumableArray","concat","shuffled","sort","this","setState","slice","map","changeIcons","_this2","react_default","a","createElement","className","i","dist_default","fill","palette","style","background","onClick","changeColors","fill0","fill1","href","title","target","Component","Boolean","window","location","hostname","match","library","add","faBalanceScale","faCloudSun","faAtom","faBatteryHalf","faBicycle","faBellSlash","faBirthdayCake","faBookDead","faBroadcastTower","faCalendarAlt","faChargingStation","faCar","faCapsules","faCheckDouble","faCloudSunRain","faCloudRain","faCode","faEdit","faEject","faExchangeAlt","faEnvelopeOpenText","faFingerprint","faGraduationCap","faGlobe","faHome","faIdCard","faLaptop","faLaptopCode","faList","faMailBulk","faMicrophone","faMicrophoneAlt","faMoneyCheckAlt","faPlaneDeparture","faSeedling","faRecycle","faSyncAlt","faPalette","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bd0a36f3.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport randomColor from 'randomcolor';\nimport FontAwesomeIcon from '@ntag/react-fontawesome';\nimport { kebabCase } from 'lodash';\n\nconst icons = [\n  'faBalanceScale',\n  'faCloudSun',\n  'faAtom',\n  'faBatteryHalf',\n  'faBicycle',\n  'faBellSlash',\n  'faBirthdayCake',\n  'faBookDead',\n  'faBroadcastTower',\n  'faCalendarAlt',\n  'faChargingStation',\n  'faCar',\n  'faCapsules',\n  'faCheckDouble',\n  'faCloudSunRain',\n  'faCloudRain',\n  'faCode',\n  'faEdit',\n  'faEject',\n  'faExchangeAlt',\n  'faEnvelopeOpenText',\n  'faFingerprint',\n  'faGraduationCap',\n  'faGlobe',\n  'faHome',\n  'faIdCard',\n  'faLaptop',\n  'faLaptopCode',\n  'faList',\n  'faMailBulk',\n  'faMicrophone',\n  'faMicrophoneAlt',\n  'faMoneyCheckAlt',\n  'faPlaneDeparture',\n  'faSeedling',\n  'faRecycle',\n];\n\nconst iconName = (icon) => {\n  return kebabCase(icon).replace('fa-', '');\n};\n\nclass App extends Component {\n  state = {\n    icons: [],\n    key: 0,\n  }\n\n  palette() {\n    const numberOfColors = 2 + Math.ceil(Math.random() * 10);\n    const colors = randomColor({\n      count: numberOfColors,\n      hue: randomColor(),\n   });\n    return [...colors, ...colors, ...colors, ...colors, ...colors, ...colors];\n  }\n\n  // From https://stackoverflow.com/questions/19269545/how-to-get-n-no-elements-randomly-from-an-array\n  changeIcons() {\n    const numberOfIcons = 12;\n    const shuffled = icons.sort(() => .5 - Math.random());\n    this.setState({\n      icons: shuffled.slice(0, numberOfIcons).map(iconName),\n    });\n  }\n\n  changeColors() {\n    this.setState({\n      key: this.state.key + 1,\n    });\n  }\n\n  componentDidMount() {\n    this.changeIcons();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"Icons\">\n          {this.state.icons.slice(0, 6).map((icon, i) => (\n            <div className=\"Icon\" key={icon}>\n              <FontAwesomeIcon\n                icon={icon}\n                fill={this.palette()}\n              />\n            </div>\n          ))}\n        </div>\n        <div className=\"Title\">\n          Font Awesome, <span className=\"gradient\">Colored</span>\n        </div>\n        <div className=\"Icons\">\n          {this.state.icons.slice(6, 12).map((icon, i) => (\n            <div className=\"Icon\" key={icon}>\n              <FontAwesomeIcon\n                icon={icon}\n                fill={this.palette()}\n              />\n            </div>\n          ))}\n        </div>\n        <div className=\"Buttons\">\n          <div\n            className=\"Button\"\n            style={{ background: '#FF4136' }}\n            onClick={() => this.changeColors()}\n          >\n            <FontAwesomeIcon\n              icon=\"sync-alt\"\n              fill0=\"#01FF70\"\n              fill1=\"#FFDC00\"\n            />\n            <span>Change colors</span>\n          </div>\n          <div\n            className=\"Button\"\n            style={{ background: '#0074D9' }}\n            onClick={() => this.changeIcons()}\n          >\n            <FontAwesomeIcon\n              icon=\"palette\"\n              fill0=\"#001f3f\"\n            />\n            <span>Change icons</span>\n          </div>\n        </div>\n        <div className=\"Legend\">\n          <div>\n            Color <b>individual pieces</b> of <a href=\"https://fontawesome.com/\" title=\"Font Awesome website\" target=\"_blank\">Font Awesome</a> icons using React.\n          </div>\n          <a href=\"https://github.com/NTag/react-fontawesome\" title=\"View Github project\">\n            View on Github\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport {\n  faBalanceScale,\n  faCloudSun,\n  faAtom,\n  faBatteryHalf,\n  faBicycle,\n  faBellSlash,\n  faBirthdayCake,\n  faBookDead,\n  faBroadcastTower,\n  faCalendarAlt,\n  faChargingStation,\n  faCar,\n  faCapsules,\n  faCheckDouble,\n  faCloudSunRain,\n  faCloudRain,\n  faCode,\n  faEdit,\n  faEject,\n  faExchangeAlt,\n  faEnvelopeOpenText,\n  faFingerprint,\n  faGraduationCap,\n  faGlobe,\n  faHome,\n  faIdCard,\n  faLaptop,\n  faLaptopCode,\n  faList,\n  faMailBulk,\n  faMicrophone,\n  faMicrophoneAlt,\n  faMoneyCheckAlt,\n  faPlaneDeparture,\n  faSeedling,\n  faRecycle,\n  faSyncAlt,\n  faPalette,\n} from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faBalanceScale);\nlibrary.add(faCloudSun);\nlibrary.add(faAtom);\nlibrary.add(faBatteryHalf);\nlibrary.add(faBicycle);\nlibrary.add(faBellSlash);\nlibrary.add(faBirthdayCake);\nlibrary.add(faBookDead);\nlibrary.add(faBroadcastTower);\nlibrary.add(faCalendarAlt);\nlibrary.add(faChargingStation);\nlibrary.add(faCar);\nlibrary.add(faCapsules);\nlibrary.add(faCheckDouble);\nlibrary.add(faCloudSunRain);\nlibrary.add(faCloudRain);\nlibrary.add(faCode);\nlibrary.add(faEdit);\nlibrary.add(faEject);\nlibrary.add(faExchangeAlt);\nlibrary.add(faEnvelopeOpenText);\nlibrary.add(faFingerprint);\nlibrary.add(faGraduationCap);\nlibrary.add(faGlobe);\nlibrary.add(faHome);\nlibrary.add(faIdCard);\nlibrary.add(faLaptop);\nlibrary.add(faLaptopCode);\nlibrary.add(faList);\nlibrary.add(faMailBulk);\nlibrary.add(faMicrophone);\nlibrary.add(faMicrophoneAlt);\nlibrary.add(faMoneyCheckAlt);\nlibrary.add(faPlaneDeparture);\nlibrary.add(faSeedling);\nlibrary.add(faRecycle);\nlibrary.add(faSyncAlt);\nlibrary.add(faPalette);\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}